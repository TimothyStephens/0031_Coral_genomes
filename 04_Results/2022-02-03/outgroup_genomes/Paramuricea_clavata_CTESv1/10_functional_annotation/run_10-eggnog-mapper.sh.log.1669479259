=====================================================================
Slurm config version 0.2
Starting at Sat 26 Nov 2022 11:14:19 AM EST
Working directory is /scratch/timothy/projects/0031_Coral_genomes/03_Analysis/2022-02-03/outgroup_genomes/Paramuricea_clavata_CTESv1/10_functional_annotation
=====================================================================

[Sat 26 Nov 2022 11:14:21 AM EST]      CMD: md5sum Paramuricea_clavata_CTESv1.genes.pep.faa ../00_databases/Paramuricea_clavata_CTESv1.genes.pep.faa | tee Paramuricea_clavata_CTESv1.genes.pep.faa.emapper.job_md5sum_list.txt
bf7f132c11cc6794709e97a653f2d6e1  Paramuricea_clavata_CTESv1.genes.pep.faa
1a63b788cc6b9cedf0bb7ba31dfb9cfe  ../00_databases/Paramuricea_clavata_CTESv1.genes.pep.faa
[Sat 26 Nov 2022 11:14:21 AM EST]      CMD: emapper.py -i Paramuricea_clavata_CTESv1.genes.pep.faa --output Paramuricea_clavata_CTESv1.genes.pep.faa --data_dir /scratch/timothy/databases/eggnog-mapper-rel20211209 --pfam_realign denovo --report_orthologs --no_file_comments --cpu 48 --dbmem
[1;32mFunctional annotation of hits...[0m
0 2.1457672119140625e-06 0.00 q/s (% mem usage: 2.00, % mem avail: 97.98)
[1;34mTime to load the DB into memory: 42.25841975212097[0m
#  emapper-2.1.6
# emapper.py  -i Paramuricea_clavata_CTESv1.genes.pep.faa --output Paramuricea_clavata_CTESv1.genes.pep.faa --data_dir /scratch/timothy/databases/eggnog-mapper-rel20211209 --pfam_realign denovo --report_orthologs --no_file_comments --cpu 48 --dbmem
[1;33m  /home/timothy/programs/eggnog-mapper-2.1.6/eggnogmapper/bin/diamond blastp -d /scratch/timothy/databases/eggnog-mapper-rel20211209/eggnog_proteins.dmnd -q /scratch/timothy/projects/0031_Coral_genomes/03_Analysis/2022-02-03/outgroup_genomes/Paramuricea_clavata_CTESv1/10_functional_annotation/Paramuricea_clavata_CTESv1.genes.pep.faa --threads 48 -o /scratch/timothy/projects/0031_Coral_genomes/03_Analysis/2022-02-03/outgroup_genomes/Paramuricea_clavata_CTESv1/10_functional_annotation/Paramuricea_clavata_CTESv1.genes.pep.faa.emapper.hits  --sensitive --iterate -e 0.001 --top 3  --outfmt 6 qseqid sseqid pident length mismatch gapopen qstart qend sstart send evalue bitscore qcovhsp scovhsp[0m
[1;32mDe novo scan of PFAM domains[0m
Loading source DB...
[31mWarning: this can take a few minutes and load up to 45GB to RAM. Using --dbmem is recommended to annotate a large number of sequences.[0m
CREATED ESL_REFORMAT DB. USING HMMSEARCH
Namespace(Z=40000000, call_info='## Sat Nov 26 11:24:48 2022\n## emapper-2.1.6\n## /home/timothy/programs/eggnog-mapper-2.1.6/emapper.py -i Paramuricea_clavata_CTESv1.genes.pep.faa --output Paramuricea_clavata_CTESv1.genes.pep.faa --data_dir /scratch/timothy/databases/eggnog-mapper-rel20211209 --pfam_realign denovo --report_orthologs --no_file_comments --cpu 48 --dbmem\n##', clean_overlaps='hmmsearch_clans', cpu=48, cpus_per_worker=48, cut_ga=True, db='/scratch/timothy/projects/0031_Coral_genomes/03_Analysis/2022-02-03/outgroup_genomes/Paramuricea_clavata_CTESv1/10_functional_annotation/tmpk3h2jytx', dbtype='seqdb', end_port=53200, evalue=1e-10, excluded_taxa=None, maxhits=0, maxseqlen=None, no_file_comments=False, num_servers=1, num_workers=1, port=51700, qcov=0, qtype='hmm', report_no_hits=False, resume=False, scan_type='mem', score=None, servers_list=None, temp_dir='/scratch/timothy/projects/0031_Coral_genomes/03_Analysis/2022-02-03/outgroup_genomes/Paramuricea_clavata_CTESv1/10_functional_annotation', trans_table=None, translate=False, usemem=True)
500 969.0562961101532 0.52 q/s (% mem usage: 13.40, % mem avail: 86.62)
1000 970.0293021202087 1.03 q/s (% mem usage: 13.40, % mem avail: 86.62)
1500 970.894686460495 1.54 q/s (% mem usage: 13.40, % mem avail: 86.62)
2000 971.7601578235626 2.06 q/s (% mem usage: 13.40, % mem avail: 86.62)
2500 972.6268758773804 2.57 q/s (% mem usage: 13.40, % mem avail: 86.62)
3000 973.6315839290619 3.08 q/s (% mem usage: 13.40, % mem avail: 86.62)
3500 974.6891112327576 3.59 q/s (% mem usage: 13.40, % mem avail: 86.62)
4000 975.556492805481 4.10 q/s (% mem usage: 13.40, % mem avail: 86.62)
4500 976.2742660045624 4.61 q/s (% mem usage: 13.40, % mem avail: 86.62)
5000 977.1644451618195 5.12 q/s (% mem usage: 13.40, % mem avail: 86.62)
5500 977.9190089702606 5.62 q/s (% mem usage: 13.40, % mem avail: 86.62)
6000 978.760892868042 6.13 q/s (% mem usage: 13.40, % mem avail: 86.62)
6500 979.5473585128784 6.64 q/s (% mem usage: 13.40, % mem avail: 86.62)
7000 980.4337201118469 7.14 q/s (% mem usage: 13.40, % mem avail: 86.62)
7500 981.2491865158081 7.64 q/s (% mem usage: 13.40, % mem avail: 86.62)
8000 982.1705174446106 8.15 q/s (% mem usage: 13.40, % mem avail: 86.62)
8500 982.913782119751 8.65 q/s (% mem usage: 13.40, % mem avail: 86.62)
9000 983.6864275932312 9.15 q/s (% mem usage: 13.40, % mem avail: 86.62)
9500 984.6403594017029 9.65 q/s (% mem usage: 13.40, % mem avail: 86.62)
10000 985.5199060440063 10.15 q/s (% mem usage: 13.40, % mem avail: 86.62)
10500 986.3730235099792 10.65 q/s (% mem usage: 13.40, % mem avail: 86.62)
11000 987.2757544517517 11.14 q/s (% mem usage: 13.40, % mem avail: 86.62)
11500 988.1323280334473 11.64 q/s (% mem usage: 13.40, % mem avail: 86.62)
12000 988.9755280017853 12.13 q/s (% mem usage: 13.40, % mem avail: 86.62)
12500 989.8452785015106 12.63 q/s (% mem usage: 13.40, % mem avail: 86.62)
13000 990.6520547866821 13.12 q/s (% mem usage: 13.40, % mem avail: 86.62)
13500 991.5262403488159 13.62 q/s (% mem usage: 13.40, % mem avail: 86.62)
14000 992.4359772205353 14.11 q/s (% mem usage: 13.40, % mem avail: 86.62)
14500 993.2785205841064 14.60 q/s (% mem usage: 13.40, % mem avail: 86.62)
15000 994.0059487819672 15.09 q/s (% mem usage: 13.40, % mem avail: 86.62)
15500 994.9025332927704 15.58 q/s (% mem usage: 13.40, % mem avail: 86.62)
16000 995.7525420188904 16.07 q/s (% mem usage: 13.40, % mem avail: 86.62)
16500 996.6565914154053 16.56 q/s (% mem usage: 13.40, % mem avail: 86.62)
17000 997.6562459468842 17.04 q/s (% mem usage: 13.40, % mem avail: 86.62)
17500 998.4753651618958 17.53 q/s (% mem usage: 13.40, % mem avail: 86.62)
18000 999.3395175933838 18.01 q/s (% mem usage: 13.40, % mem avail: 86.62)
18500 1000.2675619125366 18.50 q/s (% mem usage: 13.40, % mem avail: 86.62)
19000 1001.0927667617798 18.98 q/s (% mem usage: 13.40, % mem avail: 86.62)
19500 1001.8629298210144 19.46 q/s (% mem usage: 13.40, % mem avail: 86.62)
20000 1002.75128698349 19.95 q/s (% mem usage: 13.40, % mem avail: 86.62)
20500 1003.7707872390747 20.42 q/s (% mem usage: 13.40, % mem avail: 86.62)
21000 1004.6763980388641 20.90 q/s (% mem usage: 13.40, % mem avail: 86.62)
21500 1005.5121610164642 21.38 q/s (% mem usage: 13.40, % mem avail: 86.62)
22000 1006.5290336608887 21.86 q/s (% mem usage: 13.40, % mem avail: 86.62)
22500 1007.3856964111328 22.34 q/s (% mem usage: 13.40, % mem avail: 86.62)
23000 1008.2105765342712 22.81 q/s (% mem usage: 13.40, % mem avail: 86.62)
23500 1008.9873466491699 23.29 q/s (% mem usage: 13.40, % mem avail: 86.62)
24000 1009.8414714336395 23.77 q/s (% mem usage: 13.40, % mem avail: 86.62)
24500 1010.7705774307251 24.24 q/s (% mem usage: 13.40, % mem avail: 86.62)
25000 1011.6911315917969 24.71 q/s (% mem usage: 13.40, % mem avail: 86.62)
25500 1012.6075415611267 25.18 q/s (% mem usage: 13.40, % mem avail: 86.62)
26000 1013.5102074146271 25.65 q/s (% mem usage: 13.40, % mem avail: 86.62)
26500 1014.290673494339 26.13 q/s (% mem usage: 13.40, % mem avail: 86.62)
27000 1015.1049547195435 26.60 q/s (% mem usage: 13.40, % mem avail: 86.62)
27500 1015.9133443832397 27.07 q/s (% mem usage: 13.40, % mem avail: 86.62)
28000 1016.7082252502441 27.54 q/s (% mem usage: 13.40, % mem avail: 86.62)
28500 1017.542445898056 28.01 q/s (% mem usage: 13.40, % mem avail: 86.62)
29000 1018.436238527298 28.48 q/s (% mem usage: 13.40, % mem avail: 86.62)
29500 1019.3707001209259 28.94 q/s (% mem usage: 13.40, % mem avail: 86.62)
30000 1020.1849846839905 29.41 q/s (% mem usage: 13.40, % mem avail: 86.62)
30500 1020.8316750526428 29.88 q/s (% mem usage: 13.40, % mem avail: 86.62)
31000 1021.5865647792816 30.34 q/s (% mem usage: 13.40, % mem avail: 86.62)
31500 1022.3415384292603 30.81 q/s (% mem usage: 13.40, % mem avail: 86.62)
32000 1023.14515209198 31.28 q/s (% mem usage: 13.40, % mem avail: 86.62)
32500 1023.880286693573 31.74 q/s (% mem usage: 13.40, % mem avail: 86.62)
33000 1024.9070255756378 32.20 q/s (% mem usage: 13.40, % mem avail: 86.62)
33500 1025.7183327674866 32.66 q/s (% mem usage: 13.40, % mem avail: 86.62)
34000 1026.5822472572327 33.12 q/s (% mem usage: 13.40, % mem avail: 86.62)
34500 1027.4995682239532 33.58 q/s (% mem usage: 13.40, % mem avail: 86.62)
35000 1028.3808178901672 34.03 q/s (% mem usage: 13.40, % mem avail: 86.62)
35500 1029.3001635074615 34.49 q/s (% mem usage: 13.40, % mem avail: 86.62)
36000 1030.1086585521698 34.95 q/s (% mem usage: 13.40, % mem avail: 86.62)
36500 1031.038964509964 35.40 q/s (% mem usage: 13.40, % mem avail: 86.62)
37000 1031.8094685077667 35.86 q/s (% mem usage: 13.40, % mem avail: 86.62)
37500 1032.6523942947388 36.31 q/s (% mem usage: 13.40, % mem avail: 86.62)
38000 1033.4945421218872 36.77 q/s (% mem usage: 13.40, % mem avail: 86.62)
38500 1034.325528383255 37.22 q/s (% mem usage: 13.40, % mem avail: 86.62)
39000 1035.0904417037964 37.68 q/s (% mem usage: 13.40, % mem avail: 86.62)
39500 1035.9383680820465 38.13 q/s (% mem usage: 13.40, % mem avail: 86.62)
40000 1036.7446451187134 38.58 q/s (% mem usage: 13.40, % mem avail: 86.62)
40500 1037.7199823856354 39.03 q/s (% mem usage: 13.40, % mem avail: 86.62)
41000 1038.5257260799408 39.48 q/s (% mem usage: 13.40, % mem avail: 86.62)
41500 1039.3670990467072 39.93 q/s (% mem usage: 13.40, % mem avail: 86.62)
42000 1040.2108254432678 40.38 q/s (% mem usage: 13.40, % mem avail: 86.62)
42500 1041.0820751190186 40.82 q/s (% mem usage: 13.40, % mem avail: 86.62)
43000 1042.0011246204376 41.27 q/s (% mem usage: 13.40, % mem avail: 86.62)
43500 1042.7773852348328 41.72 q/s (% mem usage: 13.40, % mem avail: 86.62)
44000 1043.6631088256836 42.16 q/s (% mem usage: 13.40, % mem avail: 86.62)
44500 1044.547822713852 42.60 q/s (% mem usage: 13.40, % mem avail: 86.62)
45000 1045.4612271785736 43.04 q/s (% mem usage: 13.40, % mem avail: 86.62)
45500 1047.0522689819336 43.46 q/s (% mem usage: 13.40, % mem avail: 86.62)
46000 1048.7219347953796 43.86 q/s (% mem usage: 13.40, % mem avail: 86.62)
46079 1049.60915350914 43.90 q/s (% mem usage: 13.20, % mem avail: 86.78)
[32mDone[0m
   /scratch/timothy/projects/0031_Coral_genomes/03_Analysis/2022-02-03/outgroup_genomes/Paramuricea_clavata_CTESv1/10_functional_annotation/Paramuricea_clavata_CTESv1.genes.pep.faa.emapper.hits
   /scratch/timothy/projects/0031_Coral_genomes/03_Analysis/2022-02-03/outgroup_genomes/Paramuricea_clavata_CTESv1/10_functional_annotation/Paramuricea_clavata_CTESv1.genes.pep.faa.emapper.seed_orthologs
   /scratch/timothy/projects/0031_Coral_genomes/03_Analysis/2022-02-03/outgroup_genomes/Paramuricea_clavata_CTESv1/10_functional_annotation/Paramuricea_clavata_CTESv1.genes.pep.faa.emapper.annotations
   /scratch/timothy/projects/0031_Coral_genomes/03_Analysis/2022-02-03/outgroup_genomes/Paramuricea_clavata_CTESv1/10_functional_annotation/Paramuricea_clavata_CTESv1.genes.pep.faa.emapper.pfam
   /scratch/timothy/projects/0031_Coral_genomes/03_Analysis/2022-02-03/outgroup_genomes/Paramuricea_clavata_CTESv1/10_functional_annotation/Paramuricea_clavata_CTESv1.genes.pep.faa.emapper.orthologs

================================================================================
CITATION:
If you use this software, please cite:

[1] eggNOG-mapper v2: functional annotation, orthology assignments, and domain 
      prediction at the metagenomic scale. Carlos P. Cantalapiedra, 
      Ana Hernandez-Plaza, Ivica Letunic, Peer Bork, Jaime Huerta-Cepas. 2021.
      Molecular Biology and Evolution, msab293, https://doi.org/10.1093/molbev/msab293

[2] eggNOG 5.0: a hierarchical, functionally and phylogenetically annotated
      orthology resource based on 5090 organisms and 2502 viruses. Jaime
      Huerta-Cepas, Damian Szklarczyk, Davide Heller, Ana Hernandez-Plaza,
      Sofia K Forslund, Helen Cook, Daniel R Mende, Ivica Letunic, Thomas
      Rattei, Lars J Jensen, Christian von Mering and Peer Bork. Nucleic Acids
      Research, Volume 47, Issue D1, 8 January 2019, Pages D309-D314,
      https://doi.org/10.1093/nar/gky1085 

[3] Sensitive protein alignments at tree-of-life scale using DIAMOND.
       Buchfink B, Reuter K, Drost HG. 2021.
       Nature Methods 18, 366–368 (2021). https://doi.org/10.1038/s41592-021-01101-x

e.g. Functional annotation was performed using emapper-2.1.6 [1]
 based on eggNOG orthology data [2]. Sequence searches were performed using [3].


================================================================================

Total hits processed: 46079
Total time: 1523 secs
FINISHED
[Sat 26 Nov 2022 11:39:50 AM EST]      CMD: rm -fr emappertmp_*

=====================================================================
Started: at Sat 26 Nov 2022 11:14:19 AM EST
Finished: at Sat 26 Nov 2022 11:39:50 AM EST
ExitStatus: 0
=====================================================================
