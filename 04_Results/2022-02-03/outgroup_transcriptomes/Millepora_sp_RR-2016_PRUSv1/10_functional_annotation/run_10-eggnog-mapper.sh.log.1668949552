=====================================================================
Slurm config version 0.2
Starting at Sun 20 Nov 2022 08:05:52 AM EST
Working directory is /scratch/timothy/projects/0031_Coral_genomes/03_Analysis/2022-02-03/outgroup_transcriptomes/Millepora_sp_RR-2016_PRUSv1/10_functional_annotation
=====================================================================

[Sun 20 Nov 2022 08:05:53 AM EST]      CMD: md5sum Millepora_sp_RR-2016_PRUSv1.transcripts.pep.faa ../00_databases/Millepora_sp_RR-2016_PRUSv1.transcripts.pep.faa | tee Millepora_sp_RR-2016_PRUSv1.transcripts.pep.faa.emapper.job_md5sum_list.txt
10236d23e47aae63f5a2d3fb62864f42  Millepora_sp_RR-2016_PRUSv1.transcripts.pep.faa
10236d23e47aae63f5a2d3fb62864f42  ../00_databases/Millepora_sp_RR-2016_PRUSv1.transcripts.pep.faa
[Sun 20 Nov 2022 08:05:53 AM EST]      CMD: emapper.py -i Millepora_sp_RR-2016_PRUSv1.transcripts.pep.faa --output Millepora_sp_RR-2016_PRUSv1.transcripts.pep.faa --data_dir /scratch/timothy/databases/eggnog-mapper-rel20211209 --pfam_realign denovo --report_orthologs --no_file_comments --cpu 48 --dbmem
[1;32mFunctional annotation of hits...[0m
0 4.5299530029296875e-06 0.00 q/s (% mem usage: 2.10, % mem avail: 97.91)
[1;34mTime to load the DB into memory: 66.47035837173462[0m
#  emapper-2.1.6
# emapper.py  -i Millepora_sp_RR-2016_PRUSv1.transcripts.pep.faa --output Millepora_sp_RR-2016_PRUSv1.transcripts.pep.faa --data_dir /scratch/timothy/databases/eggnog-mapper-rel20211209 --pfam_realign denovo --report_orthologs --no_file_comments --cpu 48 --dbmem
[1;33m  /home/timothy/programs/eggnog-mapper-2.1.6/eggnogmapper/bin/diamond blastp -d /scratch/timothy/databases/eggnog-mapper-rel20211209/eggnog_proteins.dmnd -q /scratch/timothy/projects/0031_Coral_genomes/03_Analysis/2022-02-03/outgroup_transcriptomes/Millepora_sp_RR-2016_PRUSv1/10_functional_annotation/Millepora_sp_RR-2016_PRUSv1.transcripts.pep.faa --threads 48 -o /scratch/timothy/projects/0031_Coral_genomes/03_Analysis/2022-02-03/outgroup_transcriptomes/Millepora_sp_RR-2016_PRUSv1/10_functional_annotation/Millepora_sp_RR-2016_PRUSv1.transcripts.pep.faa.emapper.hits  --sensitive --iterate -e 0.001 --top 3  --outfmt 6 qseqid sseqid pident length mismatch gapopen qstart qend sstart send evalue bitscore qcovhsp scovhsp[0m
[1;32mDe novo scan of PFAM domains[0m
Loading source DB...
[31mWarning: this can take a few minutes and load up to 45GB to RAM. Using --dbmem is recommended to annotate a large number of sequences.[0m
CREATED ESL_REFORMAT DB. USING HMMSEARCH
Namespace(Z=40000000, call_info='## Sun Nov 20 08:22:24 2022\n## emapper-2.1.6\n## /home/timothy/programs/eggnog-mapper-2.1.6/emapper.py -i Millepora_sp_RR-2016_PRUSv1.transcripts.pep.faa --output Millepora_sp_RR-2016_PRUSv1.transcripts.pep.faa --data_dir /scratch/timothy/databases/eggnog-mapper-rel20211209 --pfam_realign denovo --report_orthologs --no_file_comments --cpu 48 --dbmem\n##', clean_overlaps='hmmsearch_clans', cpu=48, cpus_per_worker=48, cut_ga=True, db='/scratch/timothy/projects/0031_Coral_genomes/03_Analysis/2022-02-03/outgroup_transcriptomes/Millepora_sp_RR-2016_PRUSv1/10_functional_annotation/tmpu9fvog_p', dbtype='seqdb', end_port=53200, evalue=1e-10, excluded_taxa=None, maxhits=0, maxseqlen=None, no_file_comments=False, num_servers=1, num_workers=1, port=51700, qcov=0, qtype='hmm', report_no_hits=False, resume=False, scan_type='mem', score=None, servers_list=None, temp_dir='/scratch/timothy/projects/0031_Coral_genomes/03_Analysis/2022-02-03/outgroup_transcriptomes/Millepora_sp_RR-2016_PRUSv1/10_functional_annotation', trans_table=None, translate=False, usemem=True)
500 1156.341567516327 0.43 q/s (% mem usage: 13.50, % mem avail: 86.50)
1000 1158.0779645442963 0.86 q/s (% mem usage: 13.50, % mem avail: 86.50)
1500 1160.0714614391327 1.29 q/s (% mem usage: 13.50, % mem avail: 86.50)
2000 1162.2441596984863 1.72 q/s (% mem usage: 13.50, % mem avail: 86.50)
2500 1163.5166850090027 2.15 q/s (% mem usage: 13.50, % mem avail: 86.50)
3000 1165.849545955658 2.57 q/s (% mem usage: 13.50, % mem avail: 86.50)
3500 1167.5614676475525 3.00 q/s (% mem usage: 13.50, % mem avail: 86.50)
4000 1169.3143248558044 3.42 q/s (% mem usage: 13.50, % mem avail: 86.50)
4500 1170.496261358261 3.84 q/s (% mem usage: 13.50, % mem avail: 86.50)
5000 1172.3988201618195 4.26 q/s (% mem usage: 13.50, % mem avail: 86.50)
5500 1178.4760417938232 4.67 q/s (% mem usage: 13.50, % mem avail: 86.50)
6000 1180.4104804992676 5.08 q/s (% mem usage: 13.50, % mem avail: 86.50)
6500 1182.1042675971985 5.50 q/s (% mem usage: 13.50, % mem avail: 86.50)
7000 1189.0914106369019 5.89 q/s (% mem usage: 13.50, % mem avail: 86.50)
7500 1190.5854699611664 6.30 q/s (% mem usage: 13.50, % mem avail: 86.50)
8000 1196.0121273994446 6.69 q/s (% mem usage: 13.50, % mem avail: 86.50)
8500 1197.5460460186005 7.10 q/s (% mem usage: 13.50, % mem avail: 86.50)
9000 1199.5205075740814 7.50 q/s (% mem usage: 13.50, % mem avail: 86.50)
9500 1202.0261013507843 7.90 q/s (% mem usage: 13.50, % mem avail: 86.50)
10000 1207.8914239406586 8.28 q/s (% mem usage: 13.50, % mem avail: 86.50)
10500 1209.9208958148956 8.68 q/s (% mem usage: 13.50, % mem avail: 86.50)
11000 1211.6177160739899 9.08 q/s (% mem usage: 13.50, % mem avail: 86.50)
11500 1213.1542336940765 9.48 q/s (% mem usage: 13.50, % mem avail: 86.50)
12000 1215.183329820633 9.88 q/s (% mem usage: 13.50, % mem avail: 86.50)
12500 1217.2661952972412 10.27 q/s (% mem usage: 13.50, % mem avail: 86.51)
13000 1226.1786551475525 10.60 q/s (% mem usage: 13.50, % mem avail: 86.51)
13500 1227.9010608196259 10.99 q/s (% mem usage: 13.50, % mem avail: 86.51)
14000 1229.7211713790894 11.38 q/s (% mem usage: 13.50, % mem avail: 86.51)
14500 1231.1740472316742 11.78 q/s (% mem usage: 13.50, % mem avail: 86.51)
15000 1232.9968025684357 12.17 q/s (% mem usage: 13.50, % mem avail: 86.51)
15500 1234.8044571876526 12.55 q/s (% mem usage: 13.50, % mem avail: 86.51)
16000 1236.544986963272 12.94 q/s (% mem usage: 13.50, % mem avail: 86.51)
16500 1239.623116493225 13.31 q/s (% mem usage: 13.50, % mem avail: 86.51)
17000 1241.5425987243652 13.69 q/s (% mem usage: 13.50, % mem avail: 86.51)
17500 1242.9824669361115 14.08 q/s (% mem usage: 13.50, % mem avail: 86.51)
18000 1245.6119346618652 14.45 q/s (% mem usage: 13.50, % mem avail: 86.51)
18500 1247.493812084198 14.83 q/s (% mem usage: 13.50, % mem avail: 86.51)
19000 1249.1735463142395 15.21 q/s (% mem usage: 13.50, % mem avail: 86.51)
19500 1251.3221879005432 15.58 q/s (% mem usage: 13.50, % mem avail: 86.51)
20000 1257.179127216339 15.91 q/s (% mem usage: 13.50, % mem avail: 86.51)
20500 1259.1272265911102 16.28 q/s (% mem usage: 13.50, % mem avail: 86.51)
21000 1260.948928117752 16.65 q/s (% mem usage: 13.50, % mem avail: 86.51)
21500 1263.1390664577484 17.02 q/s (% mem usage: 13.50, % mem avail: 86.51)
22000 1265.360151052475 17.39 q/s (% mem usage: 13.50, % mem avail: 86.51)
22500 1267.982721567154 17.74 q/s (% mem usage: 13.50, % mem avail: 86.51)
23000 1270.2143800258636 18.11 q/s (% mem usage: 13.50, % mem avail: 86.51)
23500 1272.1309642791748 18.47 q/s (% mem usage: 13.50, % mem avail: 86.51)
24000 1274.2060222625732 18.84 q/s (% mem usage: 13.50, % mem avail: 86.51)
24500 1276.1835508346558 19.20 q/s (% mem usage: 13.50, % mem avail: 86.51)
25000 1278.2698254585266 19.56 q/s (% mem usage: 13.50, % mem avail: 86.51)
25500 1280.512247800827 19.91 q/s (% mem usage: 13.50, % mem avail: 86.51)
26000 1282.7669196128845 20.27 q/s (% mem usage: 13.50, % mem avail: 86.51)
26500 1285.1356422901154 20.62 q/s (% mem usage: 13.50, % mem avail: 86.51)
27000 1287.3488912582397 20.97 q/s (% mem usage: 13.50, % mem avail: 86.51)
27500 1289.728006362915 21.32 q/s (% mem usage: 13.50, % mem avail: 86.51)
28000 1292.1031458377838 21.67 q/s (% mem usage: 13.50, % mem avail: 86.51)
28500 1294.2422940731049 22.02 q/s (% mem usage: 13.50, % mem avail: 86.51)
29000 1296.5992980003357 22.37 q/s (% mem usage: 13.50, % mem avail: 86.51)
29500 1298.6891679763794 22.72 q/s (% mem usage: 13.50, % mem avail: 86.51)
30000 1300.7281169891357 23.06 q/s (% mem usage: 13.50, % mem avail: 86.51)
30500 1302.8330626487732 23.41 q/s (% mem usage: 13.50, % mem avail: 86.51)
31000 1304.7984278202057 23.76 q/s (% mem usage: 13.50, % mem avail: 86.51)
31500 1306.5263886451721 24.11 q/s (% mem usage: 13.50, % mem avail: 86.51)
32000 1308.093922138214 24.46 q/s (% mem usage: 13.50, % mem avail: 86.51)
32500 1309.1655540466309 24.82 q/s (% mem usage: 13.50, % mem avail: 86.51)
33000 1310.1373314857483 25.19 q/s (% mem usage: 13.50, % mem avail: 86.51)
33500 1311.512329339981 25.54 q/s (% mem usage: 13.50, % mem avail: 86.51)
34000 1313.3713767528534 25.89 q/s (% mem usage: 13.50, % mem avail: 86.51)
34500 1315.9870896339417 26.22 q/s (% mem usage: 13.50, % mem avail: 86.51)
35000 1317.3101453781128 26.57 q/s (% mem usage: 13.50, % mem avail: 86.51)
35500 1319.3628675937653 26.91 q/s (% mem usage: 13.50, % mem avail: 86.51)
36000 1322.2959470748901 27.23 q/s (% mem usage: 13.50, % mem avail: 86.51)
36500 1323.884250164032 27.57 q/s (% mem usage: 13.50, % mem avail: 86.51)
37000 1325.9418683052063 27.90 q/s (% mem usage: 13.50, % mem avail: 86.51)
37500 1327.6096377372742 28.25 q/s (% mem usage: 13.50, % mem avail: 86.51)
38000 1329.831787109375 28.58 q/s (% mem usage: 13.50, % mem avail: 86.51)
38500 1332.381826877594 28.90 q/s (% mem usage: 13.50, % mem avail: 86.51)
39000 1334.6950936317444 29.22 q/s (% mem usage: 13.50, % mem avail: 86.51)
39500 1336.3723528385162 29.56 q/s (% mem usage: 13.50, % mem avail: 86.51)
40000 1338.6101081371307 29.88 q/s (% mem usage: 13.50, % mem avail: 86.51)
40500 1340.7543303966522 30.21 q/s (% mem usage: 13.50, % mem avail: 86.51)
41000 1342.915967464447 30.53 q/s (% mem usage: 13.50, % mem avail: 86.51)
41500 1344.5714657306671 30.86 q/s (% mem usage: 13.50, % mem avail: 86.51)
42000 1346.3033375740051 31.20 q/s (% mem usage: 13.50, % mem avail: 86.51)
42500 1348.6268644332886 31.51 q/s (% mem usage: 13.50, % mem avail: 86.51)
43000 1350.1141805648804 31.85 q/s (% mem usage: 13.50, % mem avail: 86.51)
43500 1351.6763553619385 32.18 q/s (% mem usage: 13.50, % mem avail: 86.51)
44000 1353.6878921985626 32.50 q/s (% mem usage: 13.50, % mem avail: 86.51)
44500 1355.8519027233124 32.82 q/s (% mem usage: 13.50, % mem avail: 86.51)
45000 1357.4074199199677 33.15 q/s (% mem usage: 13.50, % mem avail: 86.51)
45500 1364.690268278122 33.34 q/s (% mem usage: 13.50, % mem avail: 86.51)
46000 1366.5697650909424 33.66 q/s (% mem usage: 13.50, % mem avail: 86.50)
46500 1368.7412259578705 33.97 q/s (% mem usage: 13.50, % mem avail: 86.51)
47000 1370.677864074707 34.29 q/s (% mem usage: 13.50, % mem avail: 86.51)
47500 1372.386218547821 34.61 q/s (% mem usage: 13.50, % mem avail: 86.51)
47759 1374.4952461719513 34.75 q/s (% mem usage: 13.30, % mem avail: 86.69)
[32mDone[0m
   /scratch/timothy/projects/0031_Coral_genomes/03_Analysis/2022-02-03/outgroup_transcriptomes/Millepora_sp_RR-2016_PRUSv1/10_functional_annotation/Millepora_sp_RR-2016_PRUSv1.transcripts.pep.faa.emapper.hits
   /scratch/timothy/projects/0031_Coral_genomes/03_Analysis/2022-02-03/outgroup_transcriptomes/Millepora_sp_RR-2016_PRUSv1/10_functional_annotation/Millepora_sp_RR-2016_PRUSv1.transcripts.pep.faa.emapper.seed_orthologs
   /scratch/timothy/projects/0031_Coral_genomes/03_Analysis/2022-02-03/outgroup_transcriptomes/Millepora_sp_RR-2016_PRUSv1/10_functional_annotation/Millepora_sp_RR-2016_PRUSv1.transcripts.pep.faa.emapper.annotations
   /scratch/timothy/projects/0031_Coral_genomes/03_Analysis/2022-02-03/outgroup_transcriptomes/Millepora_sp_RR-2016_PRUSv1/10_functional_annotation/Millepora_sp_RR-2016_PRUSv1.transcripts.pep.faa.emapper.pfam
   /scratch/timothy/projects/0031_Coral_genomes/03_Analysis/2022-02-03/outgroup_transcriptomes/Millepora_sp_RR-2016_PRUSv1/10_functional_annotation/Millepora_sp_RR-2016_PRUSv1.transcripts.pep.faa.emapper.orthologs

================================================================================
CITATION:
If you use this software, please cite:

[1] eggNOG-mapper v2: functional annotation, orthology assignments, and domain 
      prediction at the metagenomic scale. Carlos P. Cantalapiedra, 
      Ana Hernandez-Plaza, Ivica Letunic, Peer Bork, Jaime Huerta-Cepas. 2021.
      Molecular Biology and Evolution, msab293, https://doi.org/10.1093/molbev/msab293

[2] eggNOG 5.0: a hierarchical, functionally and phylogenetically annotated
      orthology resource based on 5090 organisms and 2502 viruses. Jaime
      Huerta-Cepas, Damian Szklarczyk, Davide Heller, Ana Hernandez-Plaza,
      Sofia K Forslund, Helen Cook, Daniel R Mende, Ivica Letunic, Thomas
      Rattei, Lars J Jensen, Christian von Mering and Peer Bork. Nucleic Acids
      Research, Volume 47, Issue D1, 8 January 2019, Pages D309-D314,
      https://doi.org/10.1093/nar/gky1085 

[3] Sensitive protein alignments at tree-of-life scale using DIAMOND.
       Buchfink B, Reuter K, Drost HG. 2021.
       Nature Methods 18, 366–368 (2021). https://doi.org/10.1038/s41592-021-01101-x

e.g. Functional annotation was performed using emapper-2.1.6 [1]
 based on eggNOG orthology data [2]. Sequence searches were performed using [3].


================================================================================

Total hits processed: 47759
Total time: 2052 secs
FINISHED
[Sun 20 Nov 2022 08:40:14 AM EST]      CMD: rm -fr emappertmp_*

=====================================================================
Started: at Sun 20 Nov 2022 08:05:52 AM EST
Finished: at Sun 20 Nov 2022 08:40:14 AM EST
ExitStatus: 0
=====================================================================
