=====================================================================
Slurm config version 0.2
Starting at Thu 08 Jun 2023 05:08:01 PM EDT
Working directory is /scratch/timothy/projects/0031_Coral_genomes_NEW/03_Analysis/2022-02-03/outgroup_transcriptomes/Tripedalia_cystophora_Conant1897_1897v1/10_functional_annotation
=====================================================================

[Thu 08 Jun 2023 05:08:05 PM EDT]      CMD: md5sum Tripedalia_cystophora_Conant1897_1897v1.transcripts.pep.faa ../00_databases/Tripedalia_cystophora_Conant1897_1897v1.transcripts.pep.faa | tee Tripedalia_cystophora_Conant1897_1897v1.transcripts.pep.faa.emapper.job_md5sum_list.txt
c6994ffaa59fff6141f46ee7e053ef02  Tripedalia_cystophora_Conant1897_1897v1.transcripts.pep.faa
c6994ffaa59fff6141f46ee7e053ef02  ../00_databases/Tripedalia_cystophora_Conant1897_1897v1.transcripts.pep.faa
[Thu 08 Jun 2023 05:08:06 PM EDT]      CMD: emapper.py -i Tripedalia_cystophora_Conant1897_1897v1.transcripts.pep.faa --output Tripedalia_cystophora_Conant1897_1897v1.transcripts.pep.faa --data_dir /scratch/timothy/databases/eggnog-mapper-rel20211209 --pfam_realign denovo --report_orthologs --no_file_comments --cpu 96 --dbmem
[1;32mFunctional annotation of hits...[0m
0 3.814697265625e-06 0.00 q/s (% mem usage: 96.40, % mem avail: 3.62)
[1;34mTime to load the DB into memory: 280.58270239830017[0m
#  emapper-2.1.6
# emapper.py  -i Tripedalia_cystophora_Conant1897_1897v1.transcripts.pep.faa --output Tripedalia_cystophora_Conant1897_1897v1.transcripts.pep.faa --data_dir /scratch/timothy/databases/eggnog-mapper-rel20211209 --pfam_realign denovo --report_orthologs --no_file_comments --cpu 96 --dbmem
[1;33m  /home/timothy/programs/eggnog-mapper-2.1.6/eggnogmapper/bin/diamond blastp -d /scratch/timothy/databases/eggnog-mapper-rel20211209/eggnog_proteins.dmnd -q /scratch/timothy/projects/0031_Coral_genomes_NEW/03_Analysis/2022-02-03/outgroup_transcriptomes/Tripedalia_cystophora_Conant1897_1897v1/10_functional_annotation/Tripedalia_cystophora_Conant1897_1897v1.transcripts.pep.faa --threads 96 -o /scratch/timothy/projects/0031_Coral_genomes_NEW/03_Analysis/2022-02-03/outgroup_transcriptomes/Tripedalia_cystophora_Conant1897_1897v1/10_functional_annotation/Tripedalia_cystophora_Conant1897_1897v1.transcripts.pep.faa.emapper.hits  --sensitive --iterate -e 0.001 --top 3  --outfmt 6 qseqid sseqid pident length mismatch gapopen qstart qend sstart send evalue bitscore qcovhsp scovhsp[0m
[1;32mDe novo scan of PFAM domains[0m
Loading source DB...
[31mWarning: this can take a few minutes and load up to 45GB to RAM. Using --dbmem is recommended to annotate a large number of sequences.[0m
CREATED ESL_REFORMAT DB. USING HMMSEARCH
Namespace(Z=40000000, call_info='## Thu Jun  8 17:22:35 2023\n## emapper-2.1.6\n## /home/timothy/programs/eggnog-mapper-2.1.6/emapper.py -i Tripedalia_cystophora_Conant1897_1897v1.transcripts.pep.faa --output Tripedalia_cystophora_Conant1897_1897v1.transcripts.pep.faa --data_dir /scratch/timothy/databases/eggnog-mapper-rel20211209 --pfam_realign denovo --report_orthologs --no_file_comments --cpu 96 --dbmem\n##', clean_overlaps='hmmsearch_clans', cpu=96, cpus_per_worker=96, cut_ga=True, db='/scratch/timothy/projects/0031_Coral_genomes_NEW/03_Analysis/2022-02-03/outgroup_transcriptomes/Tripedalia_cystophora_Conant1897_1897v1/10_functional_annotation/tmpxy9i16jx', dbtype='seqdb', end_port=53200, evalue=1e-10, excluded_taxa=None, maxhits=0, maxseqlen=None, no_file_comments=False, num_servers=1, num_workers=1, port=51700, qcov=0, qtype='hmm', report_no_hits=False, resume=False, scan_type='mem', score=None, servers_list=None, temp_dir='/scratch/timothy/projects/0031_Coral_genomes_NEW/03_Analysis/2022-02-03/outgroup_transcriptomes/Tripedalia_cystophora_Conant1897_1897v1/10_functional_annotation', trans_table=None, translate=False, usemem=True)
500 1446.6195442676544 0.35 q/s (% mem usage: 98.60, % mem avail: 1.42)
1000 1449.7931337356567 0.69 q/s (% mem usage: 98.60, % mem avail: 1.42)
1500 1451.990695476532 1.03 q/s (% mem usage: 98.60, % mem avail: 1.42)
2000 1454.425443649292 1.38 q/s (% mem usage: 98.60, % mem avail: 1.42)
2500 1456.7660145759583 1.72 q/s (% mem usage: 98.60, % mem avail: 1.41)
3000 1459.0437009334564 2.06 q/s (% mem usage: 98.60, % mem avail: 1.41)
3500 1461.0701208114624 2.40 q/s (% mem usage: 98.60, % mem avail: 1.41)
4000 1463.2524285316467 2.73 q/s (% mem usage: 98.60, % mem avail: 1.41)
4500 1465.1769914627075 3.07 q/s (% mem usage: 98.60, % mem avail: 1.41)
5000 1467.1730682849884 3.41 q/s (% mem usage: 98.60, % mem avail: 1.41)
5500 1469.6838734149933 3.74 q/s (% mem usage: 98.60, % mem avail: 1.41)
6000 1472.4312615394592 4.07 q/s (% mem usage: 98.60, % mem avail: 1.41)
6500 1474.375149011612 4.41 q/s (% mem usage: 98.60, % mem avail: 1.40)
7000 1476.219765663147 4.74 q/s (% mem usage: 98.60, % mem avail: 1.40)
7500 1478.3737137317657 5.07 q/s (% mem usage: 98.60, % mem avail: 1.40)
8000 1481.303986787796 5.40 q/s (% mem usage: 98.60, % mem avail: 1.40)
8500 1483.1878955364227 5.73 q/s (% mem usage: 98.60, % mem avail: 1.40)
9000 1485.1400344371796 6.06 q/s (% mem usage: 98.60, % mem avail: 1.40)
9500 1487.4193472862244 6.39 q/s (% mem usage: 98.60, % mem avail: 1.40)
10000 1489.4970817565918 6.71 q/s (% mem usage: 98.60, % mem avail: 1.40)
10500 1491.576159954071 7.04 q/s (% mem usage: 98.60, % mem avail: 1.40)
11000 1493.6441226005554 7.36 q/s (% mem usage: 98.60, % mem avail: 1.39)
11500 1495.7953078746796 7.69 q/s (% mem usage: 98.60, % mem avail: 1.39)
12000 1497.8581824302673 8.01 q/s (% mem usage: 98.60, % mem avail: 1.39)
12500 1499.9245228767395 8.33 q/s (% mem usage: 98.60, % mem avail: 1.39)
13000 1502.2801413536072 8.65 q/s (% mem usage: 98.60, % mem avail: 1.39)
13500 1504.3344390392303 8.97 q/s (% mem usage: 98.60, % mem avail: 1.39)
14000 1506.1688811779022 9.30 q/s (% mem usage: 98.60, % mem avail: 1.39)
14500 1508.245585680008 9.61 q/s (% mem usage: 98.60, % mem avail: 1.39)
15000 1510.2222990989685 9.93 q/s (% mem usage: 98.60, % mem avail: 1.39)
15500 1512.1819088459015 10.25 q/s (% mem usage: 98.60, % mem avail: 1.39)
16000 1514.188955783844 10.57 q/s (% mem usage: 98.60, % mem avail: 1.38)
16500 1516.299637556076 10.88 q/s (% mem usage: 98.60, % mem avail: 1.38)
17000 1518.2880976200104 11.20 q/s (% mem usage: 98.60, % mem avail: 1.38)
17500 1520.2551381587982 11.51 q/s (% mem usage: 98.60, % mem avail: 1.38)
18000 1522.5043098926544 11.82 q/s (% mem usage: 98.60, % mem avail: 1.38)
18500 1524.4730203151703 12.14 q/s (% mem usage: 98.60, % mem avail: 1.38)
19000 1526.6751420497894 12.45 q/s (% mem usage: 98.60, % mem avail: 1.38)
19500 1528.521030664444 12.76 q/s (% mem usage: 98.60, % mem avail: 1.38)
20000 1530.485035419464 13.07 q/s (% mem usage: 98.60, % mem avail: 1.38)
20500 1532.5567789077759 13.38 q/s (% mem usage: 98.60, % mem avail: 1.38)
21000 1534.6469895839691 13.68 q/s (% mem usage: 98.60, % mem avail: 1.37)
21500 1536.6370596885681 13.99 q/s (% mem usage: 98.60, % mem avail: 1.37)
22000 1538.7512822151184 14.30 q/s (% mem usage: 98.60, % mem avail: 1.37)
22500 1540.6397335529327 14.60 q/s (% mem usage: 98.60, % mem avail: 1.37)
23000 1542.5710916519165 14.91 q/s (% mem usage: 98.60, % mem avail: 1.37)
23500 1544.4176003932953 15.22 q/s (% mem usage: 98.60, % mem avail: 1.37)
24000 1546.3257184028625 15.52 q/s (% mem usage: 98.60, % mem avail: 1.37)
24500 1548.154914855957 15.83 q/s (% mem usage: 98.60, % mem avail: 1.37)
25000 1549.97674202919 16.13 q/s (% mem usage: 98.60, % mem avail: 1.37)
25500 1551.9419543743134 16.43 q/s (% mem usage: 98.60, % mem avail: 1.37)
26000 1553.91508102417 16.73 q/s (% mem usage: 98.60, % mem avail: 1.36)
26500 1555.8432748317719 17.03 q/s (% mem usage: 98.60, % mem avail: 1.36)
27000 1557.638899564743 17.33 q/s (% mem usage: 98.60, % mem avail: 1.36)
27500 1559.4579181671143 17.63 q/s (% mem usage: 98.60, % mem avail: 1.36)
28000 1561.3400809764862 17.93 q/s (% mem usage: 98.60, % mem avail: 1.36)
28500 1563.3598856925964 18.23 q/s (% mem usage: 98.60, % mem avail: 1.36)
29000 1565.0943529605865 18.53 q/s (% mem usage: 98.60, % mem avail: 1.36)
29500 1567.2048065662384 18.82 q/s (% mem usage: 98.60, % mem avail: 1.36)
30000 1569.1488916873932 19.12 q/s (% mem usage: 98.60, % mem avail: 1.36)
30500 1570.8661618232727 19.42 q/s (% mem usage: 98.60, % mem avail: 1.36)
31000 1572.8714137077332 19.71 q/s (% mem usage: 98.60, % mem avail: 1.35)
31500 1574.6397635936737 20.00 q/s (% mem usage: 98.60, % mem avail: 1.35)
32000 1576.436312198639 20.30 q/s (% mem usage: 98.60, % mem avail: 1.35)
32500 1578.3584854602814 20.59 q/s (% mem usage: 98.60, % mem avail: 1.35)
33000 1580.2847139835358 20.88 q/s (% mem usage: 98.60, % mem avail: 1.35)
33500 1582.304770708084 21.17 q/s (% mem usage: 98.70, % mem avail: 1.35)
34000 1584.2428472042084 21.46 q/s (% mem usage: 98.70, % mem avail: 1.35)
34500 1586.100764989853 21.75 q/s (% mem usage: 98.70, % mem avail: 1.35)
35000 1588.0320625305176 22.04 q/s (% mem usage: 98.70, % mem avail: 1.35)
35500 1589.9713022708893 22.33 q/s (% mem usage: 98.70, % mem avail: 1.35)
36000 1591.7766344547272 22.62 q/s (% mem usage: 98.70, % mem avail: 1.35)
36500 1593.620373249054 22.90 q/s (% mem usage: 98.70, % mem avail: 1.35)
37000 1595.4799706935883 23.19 q/s (% mem usage: 98.70, % mem avail: 1.35)
37500 1597.5443918704987 23.47 q/s (% mem usage: 98.70, % mem avail: 1.35)
38000 1599.6184039115906 23.76 q/s (% mem usage: 98.70, % mem avail: 1.35)
38500 1601.5785775184631 24.04 q/s (% mem usage: 98.70, % mem avail: 1.35)
39000 1603.603276014328 24.32 q/s (% mem usage: 98.70, % mem avail: 1.35)
39500 1605.6110618114471 24.60 q/s (% mem usage: 98.70, % mem avail: 1.35)
40000 1607.9036417007446 24.88 q/s (% mem usage: 98.70, % mem avail: 1.34)
40500 1609.8082811832428 25.16 q/s (% mem usage: 98.70, % mem avail: 1.34)
41000 1611.7241032123566 25.44 q/s (% mem usage: 98.70, % mem avail: 1.34)
41500 1613.874501466751 25.71 q/s (% mem usage: 98.70, % mem avail: 1.34)
42000 1615.6337554454803 26.00 q/s (% mem usage: 98.70, % mem avail: 1.34)
42500 1617.6784360408783 26.27 q/s (% mem usage: 98.70, % mem avail: 1.34)
43000 1619.4356350898743 26.55 q/s (% mem usage: 98.70, % mem avail: 1.34)
43500 1621.4269654750824 26.83 q/s (% mem usage: 98.70, % mem avail: 1.34)
44000 1623.3830165863037 27.10 q/s (% mem usage: 98.70, % mem avail: 1.34)
44500 1625.2270946502686 27.38 q/s (% mem usage: 98.70, % mem avail: 1.34)
45000 1627.1272535324097 27.66 q/s (% mem usage: 98.70, % mem avail: 1.34)
45500 1629.0382096767426 27.93 q/s (% mem usage: 98.70, % mem avail: 1.34)
46000 1630.9011244773865 28.21 q/s (% mem usage: 98.70, % mem avail: 1.34)
46220 1636.3601565361023 28.25 q/s (% mem usage: 98.40, % mem avail: 1.57)
[32mDone[0m
   /scratch/timothy/projects/0031_Coral_genomes_NEW/03_Analysis/2022-02-03/outgroup_transcriptomes/Tripedalia_cystophora_Conant1897_1897v1/10_functional_annotation/Tripedalia_cystophora_Conant1897_1897v1.transcripts.pep.faa.emapper.hits
   /scratch/timothy/projects/0031_Coral_genomes_NEW/03_Analysis/2022-02-03/outgroup_transcriptomes/Tripedalia_cystophora_Conant1897_1897v1/10_functional_annotation/Tripedalia_cystophora_Conant1897_1897v1.transcripts.pep.faa.emapper.seed_orthologs
   /scratch/timothy/projects/0031_Coral_genomes_NEW/03_Analysis/2022-02-03/outgroup_transcriptomes/Tripedalia_cystophora_Conant1897_1897v1/10_functional_annotation/Tripedalia_cystophora_Conant1897_1897v1.transcripts.pep.faa.emapper.annotations
   /scratch/timothy/projects/0031_Coral_genomes_NEW/03_Analysis/2022-02-03/outgroup_transcriptomes/Tripedalia_cystophora_Conant1897_1897v1/10_functional_annotation/Tripedalia_cystophora_Conant1897_1897v1.transcripts.pep.faa.emapper.pfam
   /scratch/timothy/projects/0031_Coral_genomes_NEW/03_Analysis/2022-02-03/outgroup_transcriptomes/Tripedalia_cystophora_Conant1897_1897v1/10_functional_annotation/Tripedalia_cystophora_Conant1897_1897v1.transcripts.pep.faa.emapper.orthologs

================================================================================
CITATION:
If you use this software, please cite:

[1] eggNOG-mapper v2: functional annotation, orthology assignments, and domain 
      prediction at the metagenomic scale. Carlos P. Cantalapiedra, 
      Ana Hernandez-Plaza, Ivica Letunic, Peer Bork, Jaime Huerta-Cepas. 2021.
      Molecular Biology and Evolution, msab293, https://doi.org/10.1093/molbev/msab293

[2] eggNOG 5.0: a hierarchical, functionally and phylogenetically annotated
      orthology resource based on 5090 organisms and 2502 viruses. Jaime
      Huerta-Cepas, Damian Szklarczyk, Davide Heller, Ana Hernandez-Plaza,
      Sofia K Forslund, Helen Cook, Daniel R Mende, Ivica Letunic, Thomas
      Rattei, Lars J Jensen, Christian von Mering and Peer Bork. Nucleic Acids
      Research, Volume 47, Issue D1, 8 January 2019, Pages D309-D314,
      https://doi.org/10.1093/nar/gky1085 

[3] Sensitive protein alignments at tree-of-life scale using DIAMOND.
       Buchfink B, Reuter K, Drost HG. 2021.
       Nature Methods 18, 366–368 (2021). https://doi.org/10.1038/s41592-021-01101-x

e.g. Functional annotation was performed using emapper-2.1.6 [1]
 based on eggNOG orthology data [2]. Sequence searches were performed using [3].


================================================================================

Total hits processed: 46220
Total time: 2008 secs
FINISHED
[Thu 08 Jun 2023 05:41:43 PM EDT]      CMD: rm -fr emappertmp_*

=====================================================================
Started: at Thu 08 Jun 2023 05:08:01 PM EDT
Finished: at Thu 08 Jun 2023 05:41:43 PM EDT
ExitStatus: 0
=====================================================================
