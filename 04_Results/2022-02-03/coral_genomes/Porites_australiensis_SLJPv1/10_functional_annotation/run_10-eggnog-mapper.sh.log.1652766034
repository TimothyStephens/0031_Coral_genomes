=====================================================================
Slurm config version 0.2
Starting at Tue 17 May 2022 01:40:34 AM EDT
Working directory is /scratch/timothy/projects/0031_Coral_genomes/03_Analysis/2022-02-03/coral_genomes/Porites_australiensis_SLJPv1/10_functional_annotation
=====================================================================

[Tue 17 May 2022 01:40:35 AM EDT]      CMD: md5sum Porites_australiensis_SLJPv1.genes.pep.faa ../00_databases/Porites_australiensis_SLJPv1.genes.pep.faa | tee Porites_australiensis_SLJPv1.genes.pep.faa.emapper.job_md5sum_list.txt
64126cfc6352fddf8a8ff73084f18027  Porites_australiensis_SLJPv1.genes.pep.faa
1c2f35cb7aaa9482c3f7a9ba6eec4917  ../00_databases/Porites_australiensis_SLJPv1.genes.pep.faa
[Tue 17 May 2022 01:40:35 AM EDT]      CMD: emapper.py -i Porites_australiensis_SLJPv1.genes.pep.faa --output Porites_australiensis_SLJPv1.genes.pep.faa --data_dir /scratch/timothy/databases/eggnog-mapper-rel20211209 --pfam_realign denovo --report_orthologs --no_file_comments --cpu 96 --dbmem
[1;32mFunctional annotation of hits...[0m
0 5.7220458984375e-06 0.00 q/s (% mem usage: 5.30, % mem avail: 94.69)
[1;34mTime to load the DB into memory: 41.77279233932495[0m
#  emapper-2.1.6
# emapper.py  -i Porites_australiensis_SLJPv1.genes.pep.faa --output Porites_australiensis_SLJPv1.genes.pep.faa --data_dir /scratch/timothy/databases/eggnog-mapper-rel20211209 --pfam_realign denovo --report_orthologs --no_file_comments --cpu 96 --dbmem
[1;33m  /home/timothy/programs/eggnog-mapper-2.1.6/eggnogmapper/bin/diamond blastp -d /scratch/timothy/databases/eggnog-mapper-rel20211209/eggnog_proteins.dmnd -q /scratch/timothy/projects/0031_Coral_genomes/03_Analysis/2022-02-03/coral_genomes/Porites_australiensis_SLJPv1/10_functional_annotation/Porites_australiensis_SLJPv1.genes.pep.faa --threads 96 -o /scratch/timothy/projects/0031_Coral_genomes/03_Analysis/2022-02-03/coral_genomes/Porites_australiensis_SLJPv1/10_functional_annotation/Porites_australiensis_SLJPv1.genes.pep.faa.emapper.hits  --sensitive --iterate -e 0.001 --top 3  --outfmt 6 qseqid sseqid pident length mismatch gapopen qstart qend sstart send evalue bitscore qcovhsp scovhsp[0m
[1;32mDe novo scan of PFAM domains[0m
Loading source DB...
[31mWarning: this can take a few minutes and load up to 45GB to RAM. Using --dbmem is recommended to annotate a large number of sequences.[0m
CREATED ESL_REFORMAT DB. USING HMMSEARCH
Namespace(Z=40000000, call_info='## Tue May 17 01:48:55 2022\n## emapper-2.1.6\n## /home/timothy/programs/eggnog-mapper-2.1.6/emapper.py -i Porites_australiensis_SLJPv1.genes.pep.faa --output Porites_australiensis_SLJPv1.genes.pep.faa --data_dir /scratch/timothy/databases/eggnog-mapper-rel20211209 --pfam_realign denovo --report_orthologs --no_file_comments --cpu 96 --dbmem\n##', clean_overlaps='hmmsearch_clans', cpu=96, cpus_per_worker=96, cut_ga=True, db='/scratch/timothy/projects/0031_Coral_genomes/03_Analysis/2022-02-03/coral_genomes/Porites_australiensis_SLJPv1/10_functional_annotation/tmpl20gpym7', dbtype='seqdb', end_port=53200, evalue=1e-10, excluded_taxa=None, maxhits=0, maxseqlen=None, no_file_comments=False, num_servers=1, num_workers=1, port=51700, qcov=0, qtype='hmm', report_no_hits=False, resume=False, scan_type='mem', score=None, servers_list=None, temp_dir='/scratch/timothy/projects/0031_Coral_genomes/03_Analysis/2022-02-03/coral_genomes/Porites_australiensis_SLJPv1/10_functional_annotation', trans_table=None, translate=False, usemem=True)
500 990.5063564777374 0.50 q/s (% mem usage: 16.60, % mem avail: 83.42)
1000 992.1987926959991 1.01 q/s (% mem usage: 16.60, % mem avail: 83.42)
1500 993.432205915451 1.51 q/s (% mem usage: 16.60, % mem avail: 83.42)
2000 994.8999235630035 2.01 q/s (% mem usage: 16.60, % mem avail: 83.42)
2500 996.4657480716705 2.51 q/s (% mem usage: 16.60, % mem avail: 83.42)
3000 997.8825764656067 3.01 q/s (% mem usage: 16.60, % mem avail: 83.42)
3500 999.4166629314423 3.50 q/s (% mem usage: 16.60, % mem avail: 83.42)
4000 1001.0192155838013 4.00 q/s (% mem usage: 16.60, % mem avail: 83.42)
4500 1002.4624333381653 4.49 q/s (% mem usage: 16.60, % mem avail: 83.42)
5000 1003.9037809371948 4.98 q/s (% mem usage: 16.60, % mem avail: 83.42)
5500 1005.3137307167053 5.47 q/s (% mem usage: 16.60, % mem avail: 83.42)
6000 1006.6072409152985 5.96 q/s (% mem usage: 16.60, % mem avail: 83.42)
6500 1008.1382193565369 6.45 q/s (% mem usage: 16.60, % mem avail: 83.42)
7000 1009.4176931381226 6.93 q/s (% mem usage: 16.60, % mem avail: 83.42)
7500 1010.9208552837372 7.42 q/s (% mem usage: 16.60, % mem avail: 83.42)
8000 1012.5733661651611 7.90 q/s (% mem usage: 16.60, % mem avail: 83.42)
8500 1014.2106540203094 8.38 q/s (% mem usage: 16.60, % mem avail: 83.42)
9000 1015.8509414196014 8.86 q/s (% mem usage: 16.60, % mem avail: 83.42)
9500 1017.2776381969452 9.34 q/s (% mem usage: 16.60, % mem avail: 83.42)
10000 1018.7566895484924 9.82 q/s (% mem usage: 16.60, % mem avail: 83.42)
10500 1020.2663097381592 10.29 q/s (% mem usage: 16.60, % mem avail: 83.42)
11000 1021.7141835689545 10.77 q/s (% mem usage: 16.60, % mem avail: 83.42)
11500 1022.9577004909515 11.24 q/s (% mem usage: 16.60, % mem avail: 83.42)
12000 1024.5403094291687 11.71 q/s (% mem usage: 16.60, % mem avail: 83.42)
12500 1025.9000270366669 12.18 q/s (% mem usage: 16.60, % mem avail: 83.42)
13000 1027.2806844711304 12.65 q/s (% mem usage: 16.60, % mem avail: 83.42)
13500 1028.6278357505798 13.12 q/s (% mem usage: 16.60, % mem avail: 83.42)
14000 1029.920479774475 13.59 q/s (% mem usage: 16.60, % mem avail: 83.42)
14500 1031.4923341274261 14.06 q/s (% mem usage: 16.60, % mem avail: 83.42)
15000 1032.7616584300995 14.52 q/s (% mem usage: 16.60, % mem avail: 83.42)
15500 1034.1426134109497 14.99 q/s (% mem usage: 16.60, % mem avail: 83.43)
16000 1035.444845199585 15.45 q/s (% mem usage: 16.60, % mem avail: 83.43)
16500 1036.900936126709 15.91 q/s (% mem usage: 16.60, % mem avail: 83.43)
17000 1038.1130669116974 16.38 q/s (% mem usage: 16.60, % mem avail: 83.43)
17500 1039.4240417480469 16.84 q/s (% mem usage: 16.60, % mem avail: 83.43)
18000 1040.8915657997131 17.29 q/s (% mem usage: 16.60, % mem avail: 83.43)
18500 1042.306165933609 17.75 q/s (% mem usage: 16.60, % mem avail: 83.43)
19000 1043.4631373882294 18.21 q/s (% mem usage: 16.60, % mem avail: 83.43)
19500 1044.6092591285706 18.67 q/s (% mem usage: 16.60, % mem avail: 83.43)
20000 1046.0336050987244 19.12 q/s (% mem usage: 16.60, % mem avail: 83.43)
20500 1047.1571180820465 19.58 q/s (% mem usage: 16.60, % mem avail: 83.43)
21000 1048.3087162971497 20.03 q/s (% mem usage: 16.60, % mem avail: 83.43)
21500 1049.4346442222595 20.49 q/s (% mem usage: 16.60, % mem avail: 83.43)
22000 1050.3609595298767 20.95 q/s (% mem usage: 16.60, % mem avail: 83.43)
22500 1051.519271850586 21.40 q/s (% mem usage: 16.60, % mem avail: 83.43)
23000 1052.7368350028992 21.85 q/s (% mem usage: 16.60, % mem avail: 83.43)
23500 1054.0609142780304 22.29 q/s (% mem usage: 16.60, % mem avail: 83.43)
24000 1055.5712356567383 22.74 q/s (% mem usage: 16.60, % mem avail: 83.43)
24303 1057.3319714069366 22.99 q/s (% mem usage: 16.50, % mem avail: 83.52)
[32mDone[0m
   /scratch/timothy/projects/0031_Coral_genomes/03_Analysis/2022-02-03/coral_genomes/Porites_australiensis_SLJPv1/10_functional_annotation/Porites_australiensis_SLJPv1.genes.pep.faa.emapper.hits
   /scratch/timothy/projects/0031_Coral_genomes/03_Analysis/2022-02-03/coral_genomes/Porites_australiensis_SLJPv1/10_functional_annotation/Porites_australiensis_SLJPv1.genes.pep.faa.emapper.seed_orthologs
   /scratch/timothy/projects/0031_Coral_genomes/03_Analysis/2022-02-03/coral_genomes/Porites_australiensis_SLJPv1/10_functional_annotation/Porites_australiensis_SLJPv1.genes.pep.faa.emapper.annotations
   /scratch/timothy/projects/0031_Coral_genomes/03_Analysis/2022-02-03/coral_genomes/Porites_australiensis_SLJPv1/10_functional_annotation/Porites_australiensis_SLJPv1.genes.pep.faa.emapper.pfam
   /scratch/timothy/projects/0031_Coral_genomes/03_Analysis/2022-02-03/coral_genomes/Porites_australiensis_SLJPv1/10_functional_annotation/Porites_australiensis_SLJPv1.genes.pep.faa.emapper.orthologs

================================================================================
CITATION:
If you use this software, please cite:

[1] eggNOG-mapper v2: functional annotation, orthology assignments, and domain 
      prediction at the metagenomic scale. Carlos P. Cantalapiedra, 
      Ana Hernandez-Plaza, Ivica Letunic, Peer Bork, Jaime Huerta-Cepas. 2021.
      Molecular Biology and Evolution, msab293, https://doi.org/10.1093/molbev/msab293

[2] eggNOG 5.0: a hierarchical, functionally and phylogenetically annotated
      orthology resource based on 5090 organisms and 2502 viruses. Jaime
      Huerta-Cepas, Damian Szklarczyk, Davide Heller, Ana Hernandez-Plaza,
      Sofia K Forslund, Helen Cook, Daniel R Mende, Ivica Letunic, Thomas
      Rattei, Lars J Jensen, Christian von Mering and Peer Bork. Nucleic Acids
      Research, Volume 47, Issue D1, 8 January 2019, Pages D309-D314,
      https://doi.org/10.1093/nar/gky1085 

[3] Sensitive protein alignments at tree-of-life scale using DIAMOND.
       Buchfink B, Reuter K, Drost HG. 2021.
       Nature Methods 18, 366â€“368 (2021). https://doi.org/10.1038/s41592-021-01101-x

e.g. Functional annotation was performed using emapper-2.1.6 [1]
 based on eggNOG orthology data [2]. Sequence searches were performed using [3].


================================================================================

Total hits processed: 24303
Total time: 1440 secs
FINISHED
[Tue 17 May 2022 02:04:41 AM EDT]      CMD: rm -fr emappertmp_*

=====================================================================
Started: at Tue 17 May 2022 01:40:34 AM EDT
Finished: at Tue 17 May 2022 02:04:41 AM EDT
ExitStatus: 0
=====================================================================
