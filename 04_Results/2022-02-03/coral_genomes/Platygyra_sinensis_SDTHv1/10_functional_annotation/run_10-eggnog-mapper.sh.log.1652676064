=====================================================================
Slurm config version 0.2
Starting at Mon 16 May 2022 12:41:04 AM EDT
Working directory is /scratch/timothy/projects/0031_Coral_genomes/03_Analysis/2022-02-03/coral_genomes/Platygyra_sinensis_SDTHv1/10_functional_annotation
=====================================================================

[Mon 16 May 2022 12:41:04 AM EDT]      CMD: md5sum Platygyra_sinensis_SDTHv1.genes.pep.faa ../00_databases/Platygyra_sinensis_SDTHv1.genes.pep.faa | tee Platygyra_sinensis_SDTHv1.genes.pep.faa.emapper.job_md5sum_list.txt
6d7fcb3f9d01b8a07476499387ba1128  Platygyra_sinensis_SDTHv1.genes.pep.faa
6d7fcb3f9d01b8a07476499387ba1128  ../00_databases/Platygyra_sinensis_SDTHv1.genes.pep.faa
[Mon 16 May 2022 12:41:05 AM EDT]      CMD: emapper.py -i Platygyra_sinensis_SDTHv1.genes.pep.faa --output Platygyra_sinensis_SDTHv1.genes.pep.faa --data_dir /scratch/timothy/databases/eggnog-mapper-rel20211209 --pfam_realign denovo --report_orthologs --no_file_comments --cpu 96 --dbmem
[1;32mFunctional annotation of hits...[0m
0 5.245208740234375e-06 0.00 q/s (% mem usage: 5.30, % mem avail: 94.68)
[1;34mTime to load the DB into memory: 37.12148928642273[0m
#  emapper-2.1.6
# emapper.py  -i Platygyra_sinensis_SDTHv1.genes.pep.faa --output Platygyra_sinensis_SDTHv1.genes.pep.faa --data_dir /scratch/timothy/databases/eggnog-mapper-rel20211209 --pfam_realign denovo --report_orthologs --no_file_comments --cpu 96 --dbmem
[1;33m  /home/timothy/programs/eggnog-mapper-2.1.6/eggnogmapper/bin/diamond blastp -d /scratch/timothy/databases/eggnog-mapper-rel20211209/eggnog_proteins.dmnd -q /scratch/timothy/projects/0031_Coral_genomes/03_Analysis/2022-02-03/coral_genomes/Platygyra_sinensis_SDTHv1/10_functional_annotation/Platygyra_sinensis_SDTHv1.genes.pep.faa --threads 96 -o /scratch/timothy/projects/0031_Coral_genomes/03_Analysis/2022-02-03/coral_genomes/Platygyra_sinensis_SDTHv1/10_functional_annotation/Platygyra_sinensis_SDTHv1.genes.pep.faa.emapper.hits  --sensitive --iterate -e 0.001 --top 3  --outfmt 6 qseqid sseqid pident length mismatch gapopen qstart qend sstart send evalue bitscore qcovhsp scovhsp[0m
[1;32mDe novo scan of PFAM domains[0m
Loading source DB...
[31mWarning: this can take a few minutes and load up to 45GB to RAM. Using --dbmem is recommended to annotate a large number of sequences.[0m
CREATED ESL_REFORMAT DB. USING HMMSEARCH
Namespace(Z=40000000, call_info='## Mon May 16 00:51:32 2022\n## emapper-2.1.6\n## /home/timothy/programs/eggnog-mapper-2.1.6/emapper.py -i Platygyra_sinensis_SDTHv1.genes.pep.faa --output Platygyra_sinensis_SDTHv1.genes.pep.faa --data_dir /scratch/timothy/databases/eggnog-mapper-rel20211209 --pfam_realign denovo --report_orthologs --no_file_comments --cpu 96 --dbmem\n##', clean_overlaps='hmmsearch_clans', cpu=96, cpus_per_worker=96, cut_ga=True, db='/scratch/timothy/projects/0031_Coral_genomes/03_Analysis/2022-02-03/coral_genomes/Platygyra_sinensis_SDTHv1/10_functional_annotation/tmphsbjrslj', dbtype='seqdb', end_port=53200, evalue=1e-10, excluded_taxa=None, maxhits=0, maxseqlen=None, no_file_comments=False, num_servers=1, num_workers=1, port=51700, qcov=0, qtype='hmm', report_no_hits=False, resume=False, scan_type='mem', score=None, servers_list=None, temp_dir='/scratch/timothy/projects/0031_Coral_genomes/03_Analysis/2022-02-03/coral_genomes/Platygyra_sinensis_SDTHv1/10_functional_annotation', trans_table=None, translate=False, usemem=True)
500 1061.974246263504 0.47 q/s (% mem usage: 16.70, % mem avail: 83.28)
1000 1062.6009702682495 0.94 q/s (% mem usage: 16.70, % mem avail: 83.28)
1500 1063.2810893058777 1.41 q/s (% mem usage: 16.70, % mem avail: 83.28)
2000 1064.088621377945 1.88 q/s (% mem usage: 16.70, % mem avail: 83.28)
2500 1064.810697555542 2.35 q/s (% mem usage: 16.70, % mem avail: 83.28)
3000 1065.477986574173 2.82 q/s (% mem usage: 16.70, % mem avail: 83.28)
3500 1066.0916974544525 3.28 q/s (% mem usage: 16.70, % mem avail: 83.28)
4000 1066.8418295383453 3.75 q/s (% mem usage: 16.70, % mem avail: 83.28)
4500 1067.5979862213135 4.22 q/s (% mem usage: 16.70, % mem avail: 83.28)
5000 1068.3138387203217 4.68 q/s (% mem usage: 16.70, % mem avail: 83.28)
5500 1069.0330073833466 5.14 q/s (% mem usage: 16.70, % mem avail: 83.28)
6000 1069.8755083084106 5.61 q/s (% mem usage: 16.70, % mem avail: 83.28)
6500 1070.6064562797546 6.07 q/s (% mem usage: 16.70, % mem avail: 83.28)
7000 1071.3789076805115 6.53 q/s (% mem usage: 16.70, % mem avail: 83.28)
7500 1072.1354520320892 7.00 q/s (% mem usage: 16.70, % mem avail: 83.28)
8000 1072.849601507187 7.46 q/s (% mem usage: 16.70, % mem avail: 83.28)
8500 1073.6659393310547 7.92 q/s (% mem usage: 16.70, % mem avail: 83.28)
9000 1074.5377464294434 8.38 q/s (% mem usage: 16.70, % mem avail: 83.28)
9500 1075.393657207489 8.83 q/s (% mem usage: 16.70, % mem avail: 83.28)
10000 1076.357085466385 9.29 q/s (% mem usage: 16.70, % mem avail: 83.28)
10500 1077.1601927280426 9.75 q/s (% mem usage: 16.70, % mem avail: 83.28)
11000 1078.0320210456848 10.20 q/s (% mem usage: 16.70, % mem avail: 83.28)
11500 1078.8729960918427 10.66 q/s (% mem usage: 16.70, % mem avail: 83.28)
12000 1079.6986989974976 11.11 q/s (% mem usage: 16.70, % mem avail: 83.28)
12500 1080.5829319953918 11.57 q/s (% mem usage: 16.70, % mem avail: 83.28)
13000 1081.512451171875 12.02 q/s (% mem usage: 16.70, % mem avail: 83.28)
13500 1082.3660035133362 12.47 q/s (% mem usage: 16.70, % mem avail: 83.28)
14000 1083.417994260788 12.92 q/s (% mem usage: 16.70, % mem avail: 83.28)
14500 1084.3114173412323 13.37 q/s (% mem usage: 16.70, % mem avail: 83.28)
15000 1085.276153087616 13.82 q/s (% mem usage: 16.70, % mem avail: 83.28)
15500 1086.0763444900513 14.27 q/s (% mem usage: 16.70, % mem avail: 83.28)
16000 1087.0033848285675 14.72 q/s (% mem usage: 16.70, % mem avail: 83.28)
16500 1087.9441480636597 15.17 q/s (% mem usage: 16.70, % mem avail: 83.28)
17000 1088.8789193630219 15.61 q/s (% mem usage: 16.70, % mem avail: 83.28)
17500 1090.0495641231537 16.05 q/s (% mem usage: 16.70, % mem avail: 83.28)
18000 1091.0086286067963 16.50 q/s (% mem usage: 16.70, % mem avail: 83.28)
18500 1091.9421844482422 16.94 q/s (% mem usage: 16.70, % mem avail: 83.28)
19000 1092.9905180931091 17.38 q/s (% mem usage: 16.70, % mem avail: 83.28)
19500 1093.9525995254517 17.83 q/s (% mem usage: 16.70, % mem avail: 83.28)
20000 1094.9116742610931 18.27 q/s (% mem usage: 16.70, % mem avail: 83.28)
20500 1095.95956158638 18.71 q/s (% mem usage: 16.70, % mem avail: 83.28)
21000 1096.9338164329529 19.14 q/s (% mem usage: 16.70, % mem avail: 83.28)
21500 1097.9859731197357 19.58 q/s (% mem usage: 16.70, % mem avail: 83.28)
22000 1098.9222149848938 20.02 q/s (% mem usage: 16.70, % mem avail: 83.28)
22500 1099.9832742214203 20.45 q/s (% mem usage: 16.70, % mem avail: 83.28)
23000 1101.2001667022705 20.89 q/s (% mem usage: 16.70, % mem avail: 83.28)
23500 1102.0625598430634 21.32 q/s (% mem usage: 16.70, % mem avail: 83.28)
24000 1103.0234758853912 21.76 q/s (% mem usage: 16.70, % mem avail: 83.28)
24500 1104.1817336082458 22.19 q/s (% mem usage: 16.70, % mem avail: 83.28)
25000 1105.3721234798431 22.62 q/s (% mem usage: 16.70, % mem avail: 83.28)
25500 1106.5867738723755 23.04 q/s (% mem usage: 16.70, % mem avail: 83.28)
26000 1107.6419422626495 23.47 q/s (% mem usage: 16.70, % mem avail: 83.28)
26500 1108.774367570877 23.90 q/s (% mem usage: 16.70, % mem avail: 83.28)
27000 1109.8820719718933 24.33 q/s (% mem usage: 16.70, % mem avail: 83.28)
27500 1110.9999952316284 24.75 q/s (% mem usage: 16.70, % mem avail: 83.28)
28000 1112.1293532848358 25.18 q/s (% mem usage: 16.70, % mem avail: 83.28)
28500 1113.1468334197998 25.60 q/s (% mem usage: 16.70, % mem avail: 83.28)
29000 1114.1544156074524 26.03 q/s (% mem usage: 16.70, % mem avail: 83.28)
29500 1115.4424846172333 26.45 q/s (% mem usage: 16.70, % mem avail: 83.28)
30000 1116.530445575714 26.87 q/s (% mem usage: 16.70, % mem avail: 83.28)
30500 1117.8503589630127 27.28 q/s (% mem usage: 16.70, % mem avail: 83.28)
31000 1119.1296880245209 27.70 q/s (% mem usage: 16.70, % mem avail: 83.28)
31500 1120.2410130500793 28.12 q/s (% mem usage: 16.70, % mem avail: 83.28)
32000 1121.3668673038483 28.54 q/s (% mem usage: 16.70, % mem avail: 83.28)
32500 1122.5410060882568 28.95 q/s (% mem usage: 16.70, % mem avail: 83.28)
33000 1123.6026701927185 29.37 q/s (% mem usage: 16.70, % mem avail: 83.28)
33500 1124.8656668663025 29.78 q/s (% mem usage: 16.70, % mem avail: 83.28)
34000 1125.893706560135 30.20 q/s (% mem usage: 16.70, % mem avail: 83.28)
34500 1127.1553609371185 30.61 q/s (% mem usage: 16.70, % mem avail: 83.28)
35000 1128.323678970337 31.02 q/s (% mem usage: 16.70, % mem avail: 83.28)
35500 1129.6992115974426 31.42 q/s (% mem usage: 16.70, % mem avail: 83.28)
36000 1130.9054720401764 31.83 q/s (% mem usage: 16.70, % mem avail: 83.28)
36500 1131.9543857574463 32.25 q/s (% mem usage: 16.70, % mem avail: 83.28)
37000 1133.1492900848389 32.65 q/s (% mem usage: 16.70, % mem avail: 83.28)
37500 1134.4931926727295 33.05 q/s (% mem usage: 16.70, % mem avail: 83.28)
38000 1135.4310717582703 33.47 q/s (% mem usage: 16.70, % mem avail: 83.28)
38500 1136.8152282238007 33.87 q/s (% mem usage: 16.70, % mem avail: 83.28)
39000 1138.017296552658 34.27 q/s (% mem usage: 16.70, % mem avail: 83.28)
39500 1139.1591203212738 34.67 q/s (% mem usage: 16.70, % mem avail: 83.28)
40000 1140.7549834251404 35.06 q/s (% mem usage: 16.70, % mem avail: 83.28)
40500 1141.9989821910858 35.46 q/s (% mem usage: 16.70, % mem avail: 83.28)
41000 1143.1473569869995 35.87 q/s (% mem usage: 16.70, % mem avail: 83.28)
41500 1144.3548209667206 36.26 q/s (% mem usage: 16.70, % mem avail: 83.28)
42000 1145.662132024765 36.66 q/s (% mem usage: 16.70, % mem avail: 83.28)
42500 1146.8022804260254 37.06 q/s (% mem usage: 16.70, % mem avail: 83.28)
43000 1147.9093327522278 37.46 q/s (% mem usage: 16.70, % mem avail: 83.28)
43500 1148.9359965324402 37.86 q/s (% mem usage: 16.70, % mem avail: 83.28)
44000 1150.053687095642 38.26 q/s (% mem usage: 16.70, % mem avail: 83.28)
44500 1151.2685928344727 38.65 q/s (% mem usage: 16.70, % mem avail: 83.28)
45000 1152.2211730480194 39.06 q/s (% mem usage: 16.70, % mem avail: 83.28)
45500 1153.4670979976654 39.45 q/s (% mem usage: 16.70, % mem avail: 83.28)
46000 1154.706794977188 39.84 q/s (% mem usage: 16.70, % mem avail: 83.28)
46500 1155.903798341751 40.23 q/s (% mem usage: 16.70, % mem avail: 83.28)
47000 1157.2168884277344 40.61 q/s (% mem usage: 16.70, % mem avail: 83.28)
47500 1157.9702787399292 41.02 q/s (% mem usage: 16.70, % mem avail: 83.28)
48000 1158.9179158210754 41.42 q/s (% mem usage: 16.70, % mem avail: 83.28)
48500 1160.1264503002167 41.81 q/s (% mem usage: 16.70, % mem avail: 83.28)
49000 1161.3200886249542 42.19 q/s (% mem usage: 16.70, % mem avail: 83.28)
49153 1162.480988740921 42.28 q/s (% mem usage: 16.50, % mem avail: 83.47)
[32mDone[0m
   /scratch/timothy/projects/0031_Coral_genomes/03_Analysis/2022-02-03/coral_genomes/Platygyra_sinensis_SDTHv1/10_functional_annotation/Platygyra_sinensis_SDTHv1.genes.pep.faa.emapper.hits
   /scratch/timothy/projects/0031_Coral_genomes/03_Analysis/2022-02-03/coral_genomes/Platygyra_sinensis_SDTHv1/10_functional_annotation/Platygyra_sinensis_SDTHv1.genes.pep.faa.emapper.seed_orthologs
   /scratch/timothy/projects/0031_Coral_genomes/03_Analysis/2022-02-03/coral_genomes/Platygyra_sinensis_SDTHv1/10_functional_annotation/Platygyra_sinensis_SDTHv1.genes.pep.faa.emapper.annotations
   /scratch/timothy/projects/0031_Coral_genomes/03_Analysis/2022-02-03/coral_genomes/Platygyra_sinensis_SDTHv1/10_functional_annotation/Platygyra_sinensis_SDTHv1.genes.pep.faa.emapper.pfam
   /scratch/timothy/projects/0031_Coral_genomes/03_Analysis/2022-02-03/coral_genomes/Platygyra_sinensis_SDTHv1/10_functional_annotation/Platygyra_sinensis_SDTHv1.genes.pep.faa.emapper.orthologs

================================================================================
CITATION:
If you use this software, please cite:

[1] eggNOG-mapper v2: functional annotation, orthology assignments, and domain 
      prediction at the metagenomic scale. Carlos P. Cantalapiedra, 
      Ana Hernandez-Plaza, Ivica Letunic, Peer Bork, Jaime Huerta-Cepas. 2021.
      Molecular Biology and Evolution, msab293, https://doi.org/10.1093/molbev/msab293

[2] eggNOG 5.0: a hierarchical, functionally and phylogenetically annotated
      orthology resource based on 5090 organisms and 2502 viruses. Jaime
      Huerta-Cepas, Damian Szklarczyk, Davide Heller, Ana Hernandez-Plaza,
      Sofia K Forslund, Helen Cook, Daniel R Mende, Ivica Letunic, Thomas
      Rattei, Lars J Jensen, Christian von Mering and Peer Bork. Nucleic Acids
      Research, Volume 47, Issue D1, 8 January 2019, Pages D309-D314,
      https://doi.org/10.1093/nar/gky1085 

[3] Sensitive protein alignments at tree-of-life scale using DIAMOND.
       Buchfink B, Reuter K, Drost HG. 2021.
       Nature Methods 18, 366–368 (2021). https://doi.org/10.1038/s41592-021-01101-x

e.g. Functional annotation was performed using emapper-2.1.6 [1]
 based on eggNOG orthology data [2]. Sequence searches were performed using [3].


================================================================================

Total hits processed: 49153
Total time: 1626 secs
FINISHED
[Mon 16 May 2022 01:08:17 AM EDT]      CMD: rm -fr emappertmp_*

=====================================================================
Started: at Mon 16 May 2022 12:41:04 AM EDT
Finished: at Mon 16 May 2022 01:08:17 AM EDT
ExitStatus: 0
=====================================================================
